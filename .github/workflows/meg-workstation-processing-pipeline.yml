name: "[MEG Workstation] Process data check"

#######################################################################
#  Cancel any older run of the same PR/branch
#######################################################################
concurrency:
  group: fmriprep-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

#######################################################################
#  Triggers
#######################################################################
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    paths:
      - 'pipeline/fmri_pipelines/fmriprep-process-requests/**/fmriprep_config.json'
  workflow_dispatch:
    inputs:
      reprocess:
        description: "Re-run fMRIPrep even if derivatives already exist?"
        required: false
        default: "no"        # yes / no

#######################################################################
#  Global variables (visible to every step)
#######################################################################
env:
  CONFIG_DIR: pipeline/fmri_pipelines/fmriprep-process-requests     # <── single source of truth

#######################################################################
jobs:
  # 0 ───────────────────────── Title gate (unchanged) ──────────────
  check-pr-title:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        shell: bash
        run: |
          [[ "${{ github.event.pull_request.title }}" =~ ^\[Process\] ]] \
            && echo "should_run=true"  >> $GITHUB_OUTPUT \
            || echo "should_run=false" >> $GITHUB_OUTPUT

  # 1 ───────────────────────── Main job ─────────────────────────────
  run-fmriprep:
    needs: check-pr-title
    if: ${{ github.event_name == 'workflow_dispatch' || needs.check-pr-title.outputs.should_run == 'true' }}
    runs-on: self-hosted
    steps:

    # 1-A  checkout
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    # 1-B  locate edited config & project name
    - id: detect
      shell: bash
      run: |
        CONFIG=$(git diff --name-only \
                 ${{ github.event.pull_request.base_sha || github.sha }} \
                 ${{ github.event.pull_request.head_sha || github.sha }} \
                 -- "$CONFIG_DIR/**/fmriprep_config.json" | head -n1)

        if [[ -z "$CONFIG" ]]; then
          # fallback – first config in repo (rare)
          CONFIG=$(git ls-files "$CONFIG_DIR/**/fmriprep_config.json" | head -n1)
        fi

        echo "config=$CONFIG" >> $GITHUB_OUTPUT
        echo "project=$(basename "$(dirname "$CONFIG")")" >> $GITHUB_OUTPUT
        echo "✔ Config: $CONFIG"

    # 1-C  have derivatives?
    - id: have_deriv
      shell: bash
      run: |
        BASE=/home/hz3752/PycharmProjects/brainimaging-lab-documentation/data-bids/eeg-fmri/${{ steps.detect.outputs.project }}/derivatives
        [[ -d "$BASE/fmriprep" || -d "$BASE/freesurfer" ]] \
          && echo "have=true"  >> $GITHUB_OUTPUT \
          || echo "have=false" >> $GITHUB_OUTPUT

    # 1-D  purge if requested
    - name: Purge derivatives (if requested)
      if: steps.have_deriv.outputs.have == 'true' && (
            github.event.inputs.reprocess == 'yes' ||
            contains(github.event.pull_request.labels.*.name, 'reprocess')
          )
      shell: bash
      run: |
        BASE=/home/hz3752/PycharmProjects/brainimaging-lab-documentation/data-bids/eeg-fmri/${{ steps.detect.outputs.project }}/derivatives
        rm -rf "$BASE/fmriprep" "$BASE/freesurfer"
        echo "Old derivatives removed."

    # 1-E  run fMRIPrep only if needed
    - name: Run fMRIPrep launcher
      if: steps.have_deriv.outputs.have == 'false' || (
            github.event.inputs.reprocess == 'yes' ||
            contains(github.event.pull_request.labels.*.name, 'reprocess')
          )
      run: |
        python3 pipeline/fmri_pipelines/run_fmriprep_from_config.py \
          "${{ steps.detect.outputs.config }}"

    # 1-F  collect logs
    - name: Collect logs
      if: always()
      shell: bash
      run: |
        mkdir -p /home/hz3752/fmriprep_logs
        cp "$CONFIG_DIR"/**/fmriprep_*_*.log \
           /home/hz3752/fmriprep_logs/ 2>/dev/null || true

    # 2-A  tar fmriprep
    - name: Tar fmriprep derivatives
      if: success()
      id: tar_fprep
      shell: bash
      run: |
        DERIV=/home/hz3752/PycharmProjects/brainimaging-lab-documentation/data-bids/eeg-fmri/${{ steps.detect.outputs.project }}/derivatives/fmriprep
        TAR=fmriprep_${{ steps.detect.outputs.project }}_${{ github.run_id }}.tar.gz
        tar -czf "$TAR" -C "$DERIV" .
        echo "tar_fp=$TAR" >> $GITHUB_OUTPUT

    # 2-B  tar freesurfer
    - name: Tar freesurfer derivatives
      if: success()
      id: tar_fs
      shell: bash
      run: |
        DERIV=/home/hz3752/PycharmProjects/brainimaging-lab-documentation/data-bids/eeg-fmri/${{ steps.detect.outputs.project }}/derivatives/freesurfer
        TAR=freesurfer_${{ steps.detect.outputs.project }}_${{ github.run_id }}.tar.gz
        tar -czf "$TAR" -C "$DERIV" .
        echo "tar_fs=$TAR" >> $GITHUB_OUTPUT

    # 3-A  Box uploads
    - name: Upload fmriprep to Box
      if: success()
      uses: benjaminejarrell/box-upload-gh-actions@v1.2
      with:
        box-client-sdk-config: ${{ secrets.BOX_CLIENT_SDK_CONFIG }}
        box-folder-id: 331134301860
        file: ${{ steps.tar_fprep.outputs.tar_fp }}
        destination-filename: ${{ steps.tar_fprep.outputs.tar_fp }}

    - name: Upload freesurfer to Box
      if: success()
      uses: benjaminejarrell/box-upload-gh-actions@v1.2
      with:
        box-client-sdk-config: ${{ secrets.BOX_CLIENT_SDK_CONFIG }}
        box-folder-id: 331134301860
        file: ${{ steps.tar_fs.outputs.tar_fs }}
        destination-filename: ${{ steps.tar_fs.outputs.tar_fs }}
